# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        
        - name: Run Py Script
  # You may pin to the exact commit or the version.
  # uses: revanth-reddy/runpy-action@bd650eac0e5e38c42fae951932db067e9c91d6e9
  uses: revanth-reddy/runpy-action@release
  with:
    # Py script
    script: '''

                            Online Python Compiler.
                Code, Compile, Run and Debug python program online.
Write your code in this editor and press "Run" button to execute it.

'''
step2=0
step3=0
step4=0
step5=0
step6=0
step7=0
hello = input ("what is your characters name: ") 
print ("hello " + hello + " you are here to save the world as it is overun with monsters")
answer=input("A.go to sleep B.start fighting: ")
next
if answer=="A":print("you died in your sleep")
if answer=="B":step2=input("you decided to fight will you A.start with slimes or B.fight the final boss: ")
next
if step2=="B":print("he killed you immediatley")

if step2=="A":step3=input("you beat them up and got their slime do you want to A. sell it or B. eat it: " )
next
if step3=="B":print("*_* it was a poison slime you died")
if step3=="A":step4=input("you got some money do you A.buy a sword or B.buy some armor: ")
next
if step4=="A":print("you fell on the sword...wait what did you kill the slimes with")
if step4=="B":step5=input("nice armor but you are hungry do you A.go to the soup shop and spend all your money or B.go to the cracker store and have $5 left: ")
next
if step5=="A":print("you had good meal but when you left you got attacked they didnt believe you were out of money and killed you:(")
if step5=="B":step6=input("you don't feel full and regret your choice until you get attacked do you A.fight them or B.give up youre money: ")
next
if step6=="B":print("you give up your 5 dollars and they stab you...X-X")
if step6=="A":step7=input("you won luckily you had that armor do you A:fight the final boss or B.take thier stuff")
next
if step7=="A":print("you won ig idk :p yeah im lazy")
if step7=="B":print("the number of thieves stay the same the police saw and killed you for murder")

    # Fail step if the return code from running the script is non-zero
    fail-on-error: # optional, default is true
    # Include utility functions
    util: # optional, default is true
